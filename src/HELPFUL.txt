/**********************************************************/
/*********** THIS IS ONLY A QUICK START GUIDE *************/
/**** For more info refer to Angular's official guide *****/
/**********************************************************/

1- [*.ts]
    Every file ending with .ts is a TypeScript file.
    In .ts files you have TypeScript code with is a superset of JavaScript 
    which primarily provides optional static typing, classes and interfaces.

2- [*.component.spec.ts] 
   In src/app folder there are *.component.spec.ts files which are files for testing.

3- [angular cli commands]
    Our objects such as Calendar are in the src/app/components folders
        -> IMPORTANT: create components using Angular Cli with : ng g component components/[name of component]
    Our services such as course-data service are in the src/app/services folders
        -> IMPORTANT: create services using Angular Cli with : ng g service services/[name of service]

4- [naming convention]
    Follow the most recent Angular naming convention
    It's simple just look at the code already in the project as a guide

5- [component in html]
    In *.component.ts files put the name of the object in component selector
        Ex :
            @Component({
                selector: 'app-calendar'
                ... }
        Then you can add that object in app.component.html file by putting <app-calendar> tag

6- [constructor and ngOnInit]
    Note: constructor in *.component.ts files are executed before ngOnInit

7- [variables in html]
    You can create variables in the class inside *.component.ts files 
        and insert them in html by putting: {{variable name}}

8- [app.module.ts]
    In app.module.ts file, you need to specify (if not done already):
        declarations: list of components used
        providers: list of services used

9- [services and components]
    Services should do all the heavy computation and components display/communicate data to html